apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf-node-app
  namespace: default
  labels:
    app: node-app
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /dev/stderr;
    pid /var/run/nginx.pid;

    include /usr/share/nginx/modules/*.conf;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /dev/stdout  main;

        client_max_body_size 8M;
        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;


        gzip on;
        gzip_disable msie6;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

        default_type        application/octet-stream;
        upstream node-server {
          server backend:3000;
        }
        server {
            listen       80 default_server;
            server_name  _;

            include /etc/nginx/default.d/*.conf;
        	  location / {
            set $node               backend:3000;
    				proxy_set_header        Host $host;
    				proxy_set_header        X-Real-IP $remote_addr;
    				proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    				proxy_set_header        X-Forwarded-Proto $scheme;
    				proxy_redirect          http:// https://;
    				proxy_pass              http://node-server;
    		}
        }
    }
